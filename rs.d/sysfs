#!/sbin/rs
#
# $Header: /etc/rs.d/devfs                               Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.1 2015/04/30 21:09:26                      Exp $
#

:	${CG_ROOT:=/sys/fs/cgroup}
:	${SYSFS_OPTS:=nodev,nosuid,noexec}

SVC_COMMANDS=mount_cgroup

mount_sys()
{
	mountinfo /sys && return 0
	grep -Eq "[[:space:]]sysfs$" /proc/filesystems || return 1

	if ! mkdir -m 0755 -p /sys; then
		warn "Cannot create /sys"
		return 2
	fi
	begin "Mounting /sys"
	if mountinfo /sys; then
		mount ${arg} -o remount,${SYSFS_OPTS}      /sys >${NULL} 2>&1
	else
		fstabinfo --mount /sys >${NULL} 2>&1 ||
		mount ${arg} -t sysfs -o ${SYSFS_OPTS} sys /sys >${NULL} 2>&1
	fi
	end $?
}

mount_sysfs()
{
	for fs in \
		'/sys/kernel/config configfs' \
		'/sys/kernel/debug debugfs' \
		'/sys/firmware/efi/efivars efivars' \
		'/sys/fs/fuse/connections fusectl' \
		'/sys/kernel/security securityfs'
	do
		set -- ${fs}
		[ -d ${1} ] && grep -q ${2} /proc/filesystems || continue
		mount_info ${1} && continue
		begin "Mounting ${1}"
		mount ${arg} -t ${2} -o ${SYSFS_OPTS} ${2} ${1} >${NULL} 2>&1
		end ${?}
	done
}

mount_cgroup()
{
	[ -d ${CG_ROOT} ] && grep -q cgroup /proc/filesystems || return 1
	if ! mount_info ${CG_ROOT}; then
		mount ${opt} -t tmpfs -o ${SYSFS_OPTS},mode=755,size=${CG_FS_SIZE:-10M} \
			cgroup ${CG_ROOT}
	fi
	[ ${?} -eq 0 ] || return 2

	local ctrl hirc num enabled exta
	while read ctrl hirc num enabled extra; do
		case "${enabled}" in
			(1)
			mount_info ${CG_ROOT}/${ctrl} && continue
			mkdir -p ${CG_ROOT}/${ctrl}
			mount ${arg} -t cgroup -o ${SYSFS_OPTS},${ctrl} \
				${ctrl} ${CG_ROOT}/${ctrl}
			;;
		esac
	done </proc/cgroups
	return 0
}

start()
{
	local arg fs
	[ -w /etc/mtab ] || arg=-n

	mount_sys
	mount_sysfs
	mount_cgroup
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
