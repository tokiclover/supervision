#!/sbin/sv-run
#
# $Id: @(#) /etc/sv/sysfs                                             Exp $
# $L$: 2-clause/new/simplified BSD License                            Exp $
#

:	${__CGROUP_ROOT__:=/sys/fs/cgroup}
:	${SYSFS_OPTS:=nodev,nosuid,noexec}

description='Set up /sys/MISCELLANEOUS filesystems'
SVC_STARTED_COMMANDS=mount_cgroup
SVC_KEYWORD="docker lxc prefix supervision systemd-nspawn uml vserver"

mount_cgroup()
{
	cgroup_start_sys
}
mount_sys()
{
	mountinfo --quiet /sys && return 0
	grep -Eq "[[:space:]]sysfs$" /proc/filesystems || return 1

	if ! mkdir -m 0755 -p /sys; then
		warn "Cannot create /sys"
		return 2
	fi
	begin "Mounting /sys"
	if mountinfo --quiet /sys; then
		mount ${arg} -o remount,${SYSFS_OPTS}      /sys >${NULL} 2>&1
	else
		fstabinfo --quiet --mount /sys ||
		mount ${arg} -t sysfs -o ${SYSFS_OPTS} sys /sys >${NULL} 2>&1
	fi
	end "${?}"
}

mount_sysfs()
{
	for fs in \
		'/sys/kernel/config configfs' \
		'/sys/kernel/debug debugfs' \
		'/sys/firmware/efi/efivars efivars' \
		'/sys/fs/fuse/connections fusectl' \
		'/sys/kernel/security securityfs'
	do
		set -- ${fs}
		[ -d ${1} ] && grep -q ${2} /proc/filesystems || continue
		mountinfo --quiet ${1} && continue
		begin "Mounting ${1}"
		mount ${arg} -t ${2} -o ${SYSFS_OPTS} ${2} ${1} >${NULL} 2>&1
		end ${?}
	done
}

start()
{
	local arg fs
	[ -w /etc/mtab ] || arg=-n

	mount_sys
	mount_sysfs
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
