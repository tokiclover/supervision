#!/sbin/sv-run
#
# $Id: @(#) /etc/sv/device-mapper                                     Exp $
# $L$: 2-clause/new/simplified BSD License                            Exp $
#

description="Set up device-mapper"
SVC_AFTER="dev mdev udev kmod"
SVC_BEFORE="checkfs"
SVC_USE="dmcrypt"
SVC_KEYWORD="docker jail openvz prefix systemd-nspawn timeout uml vserver xenu lxc"

dmtab="/etc/dmtab"
dmsetup="$(command -v dmsetup 2>${NULL})"

volume_entries()
{
	[ -f "${dmtab}" ] || return

	local volume options
	while read volume options; do
		case "${volume}" in
			([a-zA-Z]*)
			DM_VOLUME_LIST="${DM_VOLUME_LIST} ${volume%:}"
			DM_DEVICE_LIST="${DM_DEVICE_LIST},${volume} ${options}"
			;;
		esac
	done <${dmtab}
	[ -n "${DM_VOLUME_LIST}" ]
}
volume_exists()
{
	[ -e /dev/mapper/${1} ]
}

start_pre()
{
	if [ -e /proc/modules ]; then
		device_info --all device-mapper || modporbe dm-mod >${NULL} 2>&1
	fi
	checkpath -q -d -m 0700 -o root:root /run/lvm /run/lock/lvm

	[ -n "${dmsetup}" -a -x "${dmsetup}"    ] &&
	[ -c /dev/mapper/control -a -f ${dmtab} ] &&
	volume_entries
}
stop_pre()
{
	volume_entries
}

start()
{
	[ -d /proc/lvm ] || device_info --all device-mapper || return

	local volume options retval=0 ifs="${IFS}"
	local dmsetup_opts=--addnodeoncreate
	if [ -e ${SV_RUNDIR}/udev ]; then
		sv-run -q udev start >${NULL} 2>&1 || UDEV_ARGS=--noudevsync
		ENV_SET UDEV_ARGS
		dmsetup_opts="${dmsetup_opts} ${UDEV_ARGS}"
	fi

	IFS=','
	set -- ${DM_DEVICE_LIST#,}
	IFS="${ifs}"

	for volume in "${@}"; do
		options="${volume#* }"
		volume="${volume%%:*}"
		[ -n "${volume}" -a -n "${options}" ] || continue
		volume_exists "${volume}" && continue

		begin "Creating ${volume} volume"
		${dmsetup} create "${volume}" ${dmsetup_opts} --table "${options}"
		end "${?}" || retval=$((${retval}+1))
	done
	return ${retval}
}

stop()
{
	[ "${SV_INITLEVEL}" = "${SV_SHUTDOWN_LEVEL}" ] || return
	[ -d /proc/lvm ] || device_info --all device-mapper || return

	local volume retval=0
	for volume in ${DM_VOLUME_LIST}; do
		volume_exists "${volume}" || continue
		begin "Removing ${volume} volume"
		${dmsetup} remove ${UDEV_ARGS} "${volume}"
		end "${?}" || retval=$((${retval}+1))
	done
	return ${retval}
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
