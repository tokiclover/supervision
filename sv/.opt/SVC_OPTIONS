#
# $Header:  /etc/sv/.opt/SVC_OPTIONS                     Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
#

#
# Set a few default env variables
#
:	${SV_LIBDIR:=/lib/sv}
:	${SV_SVCDIR:=/etc/sv}
:	${SV_RUNDIR:=/run/sv}
:	${SV_TMPDIR:=${SV_RUNDIR}/.tmp}
:	${SV_CFGDIR:=${SV_SVCDIR}.conf.d}
:	${name:=${SVC_NAME}}
:	${__cmd__:=${0##*/}}
:	${__cmd_args__:="${@}"}
:	${COLOR:=Yes}
:	${LOGDIR:=/var/log}
PATH=${SV_LIBDIR}/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin

[ -n "${__RUNSCRIPT_FUNCTIONS__}" ] ||
	source "${SV_LIBDIR}"/sh/runscript-functions ||
	{ echo "Required file not found." >&2; exit 1; }
source ${SV_SVCDIR%/*}/sv.conf
umask 022

#
# Use RC config file if requested
#
if yesno "${RC_OPTS}"; then
:	${RC_CONFDIR:=/etc/conf.d}
:	${RC_INITDIR:=/etc/init.d}
	SOURCE ${RC_CONFDIR}/${SVC_NAME}
fi

#
# Set up runscript environment
#
if   [ "${RS_TYPE}" = "rs" ]; then

	SOURCE "${SV_CFGDIR}"/${SVC_NAME}
	if [ "${name}" != "${SVC_NAME}" ]; then
	SOURCE "${SV_CFGDIR}"/${name}
	fi
	[ -n "${RS_RUNDIR}" ] &&
	SOURCE ${SRC_OPTS} "${RS_RUNDIR}"/${SVC_NAME} ||
	SOURCE ${SRC_OPTS} "${SV_SVCDIR}"/${SVC_NAME}

#
# Set up supervision environment
#
elif [ "${RS_TYPE}" = "sv" ]; then

	SOURCE ${SRC_OPTS} "${SV_TMPDIR}"/${SVC_NAME}_ENV
	SOURCE ${SRC_OPTS} "${SVC_DIR}"/OPTIONS

	#
	# Handle specific (virtual) service backend/instance
	#
	if [ "${name}" = "${SVC_NAME}" ]; then
	SOURCE "${SVC_DIR}"/OPTIONS.${SVC_NAME}
	else
	SOURCE "${SVC_DIR}"/OPTIONS.${name}
	fi
:	${SVC_PIDFILE=${SV_TMPDIR}/pids/${SVC_NAME}}
	SOURCE -d ${SV_SVCDIR}/.opt/SVC_BACKEND

	if [ "${__cmd__}" = "run" ]; then
	#
	# Use ENV dir(s) if requested
	#
	yesno "${ENV_DIR}" && svc_env

	#
	# Set default getty options
	#
	case "${SVC_NAME}" in # SVC_NAME=$GETTY_TTY
	(*getty-tty*)

	#
	# OS Specific
	#
	if [ "${OS_NAME}" = "Linux" ]; then
	:	${SV_TERM:=linux}
	else
	:	${SV_TERM:=vt100}
	fi

:	${PRE_CMD:=${__PRECMD__}}
:	${SVC_CMD:=agetty}
:	${TTY:=${SVC_NAME#*-}}

	case "${TTY}" in
		(tty[1-6])
	:	${SVC_OPTS:=38400 ${TTY_OPTS} ${TTY} ${SV_TERM:-linux}}
		;;
		(ttyS[01])
	:	${SVC_OPTS:=-L 115200 ${TTY_OPTS} ${TTY} vt100}
		;;
	esac

	if [ "${__SV_NAM__}" = "runit" ]; then
	:	${PRE_OPTS:=-P}
	:	${FIN_CMD:=utmpset}
	:	${FIN_OPTS:=-w ${SVC_NAME#*-}}
	fi
	;;
	esac # SVC_NAME=$GETTY_TTY
	fi # __cmd__=run

	#
	# Set a few specific log env variables
	#
	if [ "${__cmd_dir__}" = "log" ]; then

:	${SVC_LOGDIR:=${LOGDIR}/${SVC_NAME}}
:	${SVC_USER:=root:root}
:	${LOG_MODE:=0755}
:	${LOG_PROC:=gzip -nq}
:	${LOG_SIZE:=2048000}
:	${LOG_STAT:=STAT}
:	${LOG_PREFIX:=${SVC_NAME}}
:	${LOG_CMD:=${__LOGCMD__}}
	#
	# Set default log options
	#
		if [ "${__SV_NAM__}" = "runit" ]; then
	:	${LOG_ARGS:=-tt p${LOG_PREFIX}}
		else
	:	${LOG_ARGS:="T +^${LOG_STAT} =${SVC_LOGDIR}/status"}
		fi # __SV_NAM__
:	${LOG_OPTS:="${LOG_ARGS} s${LOG_SIZE} !'${LOG_PROC}' ${SVC_LOGDIR}"}
	unset LOG_PROC LOG_PREFIX LOG_STAT LOG_SIZE LOG_ARGS

	fi # __cmd_dir__=log
fi # RS_TYPE=sv

#
# Set debug options
#
if yesno "${SVC_DEBUG}"; then
	set -x
fi
SOURCE "${SV_TMPDIR}"/${SVC_NAME}_OPTIONS
SOURCE "${SV_TMPDIR}"/RS_OPTIONS
SOURCE "${SV_TMPDIR}"/SV_OPTIONS

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
