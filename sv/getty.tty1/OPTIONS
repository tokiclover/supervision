#
# $Id: @(#) /etc/sv/getty.tty1/OPTIONS                                Exp $
# $L$: 2-clause/new/simplified BSD License                            Exp $
#

TTY="${SVC_NAME#*.}"
#
# XXX: chose a getty ommand or the first found will be used;
#      or else, make symbolic links with command name prefix
#      instead of the generic `getty' name like 'agetty.tty<N>'
SVC_CMD=/sbin/agetty
#SVC_CMD=/sbin/mgetty
#SVC_CMD=/sbin/mingetty
#SVC_CMD=/sbin/fbgetty
SVC_TRY=16
SVC_AFTER="*"
name="${SVC_NAME}"

#
# XXX: Safety net
#
find_getty()
{
	local cmd
	for cmd in ${SVC_NAME%.*} agetty mgetty mingetty fbgetty; do
		cmd="$(command -v ${cmd} 2>${NULL})"
		if [ -n "${cmd}" ] && [ -x "${cmd}" ]; then
			SVC_CMD="${cmd}"
			return 0
		fi
	done

	cmd=$(command -v busybox 2>${NULL})
	if [ -n "${cmd}" ] && [ -x "${cmd}" ]; then
		warn "using busybox getty!!!"
		SVC_CMD="${cmd}"
		return 0
	fi
	name=
	return 1
}

find_issue()
{
	local x
	for x in /etc/issue.${TTY} /etc/issue.d/${TTY}; do
		[ -f ${x} ] && TTY_OPTS="${TTY_OPTS} ${1} ${x}"
	done
}
agetty_options()
{
	find_issue -f
	case "${TTY}" in
		(tty[1-6])
		SVC_OPTS="38400 ${TTY_OPTS} ${TTY} linux"
		;;
		(ttyS[01])
		SVC_OPTS="-L 115200 ${TTY_OPTS} ${TTY} vt100"
		;;
	esac
}
_rescue_shell()
{
	if [ "${SV_UNAME}" = "Linux" ]; then
		if sv-run sulogin start; then
			return 0
		fi
	fi
	#
	# XXX: launch a login shell
	#
	local pidfile=/var/run/login-shell.pid
	if ! svc_wait -E -p 5 ${pidfile}; then
		return 1
	fi
	printf "$$" >${pidfile}
	trap "rm -f ${pidfile}" INT TERM QUIT
	info "\a*** Launching \`/bin/login' rescue shell ***\a"
	info "*** Just press \`C-D' or \`exit' in the shell to resume system boot up ***"
	exec 2>&1
	exec /bin/login "root" "USER=root"
}

_start_pre()
{
	local cmd="${SVC_CMD##*/}"
	if   [ "${cmd}" = "mgetty" ]; then
		find_issue -i
		SVC_CONFIGFILE="/etc/mgetty+sendfax/mgetty.config"
		SVC_OPTS="${TTY} ${TTY_OPTS}"
	elif [ "${cmd}" = "fbgetty" ]; then
		find_issue -i
		SVC_OPTS="--fb=/dev/fb0 --login-prompt='%l@%h login: ' --tty=/dev/${TTY} ${TTY_OPTS}"
	elif [ "${cmd}" = "mingetty" ]; then
		SVC_OPTS="${TTY}"
	elif [ "${cmd}" = "agetty" ]; then
		agetty_options
	elif [ "${cmd}" = "busybox" ]; then
		agetty_options
		SVC_OPTS="getty ${SVC_OPTS}"
	fi
}
start_pre()
{
	if [ "${__cmd__}" = "run" ]; then
		if [ -z "${SVC_CMD}" ] || [ ! -x ${SVC_CMD} ]; then
			if ! find_getty; then
				error "*** Failed to find a getty binary!!! ***"
				error "*** Configure \`${SVC_DIR}/OPTIONS' and or install [a]getty(8) ***"

				error "*** Launching (su)login instead: ***"
				_rescue_shell
				return 1
			else
				warn "*** \`${SVC_NAME}' service is not configured!!! ***"
				warn "*** Configure \`${SVC_DIR}/OPTIONS' by setting up \`SVC_CMD' ***"
				info "*** Found \`${SVC_CMD}' binary; setting up the service. ***"
			fi
		fi
		_start_pre
	else
		return 0
	fi
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
