#
# $Id: @(#) /etc/sv/getty-tty1/OPTIONS                                Exp $
# $L$: 2-clause/new/simplified BSD License                            Exp $
#

TTY="${SVC_NAME#*-}"
#
# XXX: chose a getty ommand or the first found will be used;
#      or else, make symbolic links with command name prefix
#      instead of the generic `getty' name like 'agetty-tty<N>'
SVC_CMD=/sbin/agetty
#SVC_CMD=/sbin/mgetty
#SVC_CMD=/sbin/mingetty
#SVC_CMD=/sbin/fbgetty
SVC_TRY=16
SVC_AFTER="*"
name="${SVC_CMD##*/}"

#
# XXX: Safety net
#
find_getty()
{
	local cmd
	for cmd in ${SVC_NAME%-*} agetty mgetty mingetty fbgetty; do
		name="${cmd}"
		cmd="$(command -v ${cmd} 2>${NULL})"
		if [ -n "${cmd}" ] && [ -x "${cmd}" ]; then
			SVC_CMD="${cmd}"
			return 0
		fi
	done

	cmd=$(command -v busybox 2>${NULL})
	if [ -n "${cmd}" ] && [ -x "${cmd}" ]; then
		warn "using busybox getty!!!"
		name=getty SVC_CMD="${cmd}"
		return 0
	fi
	name=
	return 1
}

find_issue()
{
	[ -f /etc/issue.${TTY} ] && TTY_OPTS="${TTY_OPTS} ${1} /etc/issue.${TTY}"
}
agetty_options()
{
	find_issue -f
	case "${TTY}" in
		(tty[1-6])
		SVC_OPTS="38400 ${TTY_OPTS} ${TTY} linux"
		;;
		(ttyS[01])
		SVC_OPTS="-L 115200 ${TTY_OPTS} ${TTY} vt100"
		;;
	esac
}
rescue_shell()
{
	if [ "${OS_NAME}" = "Linux" ]; then
		if sv-run sulogn start; then
			return 0
		fi
	:	${SULOGIN_TTY:=/dev/tty8}
		if [ "${SV_SHELL##*/}" = "sulogin" ]; then
			if [ -x ${SV_SHELL} ]; then
			exec ${SV_SHELL} -p ${SULOGIN_TTY}
			else
			SV_SHELL=
			fi
		fi
		SULOGIN="$(command -v sulogin 2>${NULL})"
		[ -n "${SULOGIN}" ] && [ -x "${SULOGIN}" ] && exec ${SULOGIN} -p ${SULOGIN_TTY}
	fi

	exec <${CONSOLE} >${CONSOLE}
	exec 2>&1
	for sh in ${SV_SHELL:-$SHELL} sh bash zsh ksh ${SHELLS}; do
		sh=$(command -v ${sh} 2>${NULL})
		[ -n "${sh}" ] && [ -x "${sh}" ] && exec ${sh} -lim
	done
	error "Failed to find a shell found!!!"
}

_start_pre()
{
	local cmd
	if   [ "${name}" = "mgetty" ]; then
		find_issue -i
		SVC_CONFIGFILE="/etc/${name}+sendfax/${name}.config"
		SVC_OPTS="${TTY} ${TTY_OPTS}"
	elif [ "${name}" = "fbgetty" ]; then
		find_issue -i
		SVC_OPTS="--fb=/dev/fb0 --login-prompt='%l@%h login: ' --tty=/dev/${TTY} ${TTY_OPTS}"
	elif [ "${name}" = "mingetty" ]; then
		SVC_OPTS="${TTY}"
	elif [ "${name}" = "agetty" ]; then
		agetty_options
	elif [ "${name}" = "getty" ]; then
		agetty_options
		SVC_OPTS="getty ${SVC_OPTS}"
	fi # name
}
start_pre()
{
	if [ "${__cmd__}" = "run" ]; then
		if [ -z "${SVC_CMD}" ] || [ ! -x ${SVC_CMD} ]; then
			if ! find_getty; then
				error "Failed to find a getty binary!"
				error "Configure \`${SVC_DIR}/OPTIONS' and or install a getty package."

				error "Launching sulogin instead; and"
				rescue_shell
				return 1
			else
				info "Found \`${SVC_CMD}' binary; setting up the service."
			fi
		fi
		_start_pre
	else
		return 0
	fi
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
