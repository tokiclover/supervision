#!/sbin/sv-run
#
# $Id: @(#) /etc/sv/lvm                                               Exp $
# $L$: 2-clause/new/simplified BSD License                            Exp $
#

description="Set up LVM2 devices"
SVC_AFTER="dev mdev udev kmod device-mapper lvmetad"
SVC_BEFORE="checkfs"
SVC_USE="lvmetad"
SVC_CONFIGFILE="/etc/lvm/lvm.conf"
SVC_KEYWORD="docker jail openvz prefix systemd-nspawn timeout uml vserver xenu lxc"

lvm="$(command -v lvm 2>${NULL})"

start_pre()
{
	if [ -e /proc/modules ]; then
		device_info --all device-mapper || modporbe dm-mod >${NULL} 2>&1
	fi
	checkpath -q -d -m 0700 -o root:root /run/lvm /run/lock/lvm

	if [ -e ${SV_RUNDIR}/udev ]; then
		udevadm trigger || UDEV_ARGS=--noudevsync
		ENV_SET UDEV_ARGS
	fi

	[ -n "${lvm}" -a -x "${lvm}" ] && [ -c /dev/mapper/control -a -f ${SVC_CONFIGFILE} ]
}

#
# XXX: try to make LVM udev friendly or else LVM will stall waiting for devices
#
LVM_PVSCAN()
{
	local num="${1}" pid="$$"

	if [ -z "${UDEV_ARGS}" ]; then
		sh -c "
	n="${num}";
	while [ "\${n}" -gt 0 ]; do
		sleep 1;
		if kill -0 "${pid}" 2>${NULL}; then
			udevadm trigger;
		else
			exit 0;
		fi;
		n="\$\(\(\${n}-1\)\)";
	done;
	if kill -0 "${pid}" 2>${NULL}; then
		kill -INT "${pid}" 2>${NULL};
		exit 1;
	fi;
	exit 0;
		" &
	fi

	${lvm} pvscan
}
start()
{
	[ -d /proc/lvm ] || device_info --all device-mapper || return

	if ! LVM_PVSCAN "${PVSCAN_TIMEOUT:-60}"; then
		error "*** Failed to scan devices!!! ***"
		return 1
	fi
	${lvm} vgscan --mknodes
	${lvm} vgchange ${UDEV_ARGS} --sysinit --activate ly
}

stop()
{
	[ "${SV_INITLEVEL}" = "${SV_SHUTDOWN_LEVEL}" ] || return
	[ -d /proc/lvm ] || device_info --all device-mapper || return
	${lvm} lvchange ${UDEV_ARGS} --sysinit --activate ln
	${lvm} vgchange ${UDEV_ARGS} --sysinit --activate ln
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
