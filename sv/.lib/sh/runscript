#!/bin/sh
#
# $Header:  /lib/sv/sh/runscript                         Exp $
# $Author: (c) 2015-6 tokiclover <tokiclover@gmail.com>  Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.3 2015/05/05 21:09:26                      Exp $
#

help_message() {
	cat <<-EOH
 usage: rs [OPTIONS] SERVICE COMMAND [ARGS]
   COMMAND: add|del|remove|restart|start|stop|status|zap
   OPTIONS: [OPTS] SERVICE COMMAND [ARGS]
     -D, --nodeps     Disable dependencies
     -g, --debug      Enable debug mode
     -r, --rs         Select runscript backend
     -v, --sv         Select supervision backend
     -h, --help       Print help and exit
EOH
${1+exit ${1}}
}

[ ${#} -ge 2 ] || help_message 1
ARGS="$(getopt \
	-o Dghrv -l debug,help,nodeps,rs,sv \
	-s sh -n rs -- "${@}")"
[ ${?} -eq 0 ] || help_message 1
eval set -- ${ARGS}

while true; do
	case "${1}" in
		(-D|--node*) SVC_DEPS=0 ;;
		(-r|--rs) RS_TYPE="rs" ;;
		(-v|--sv) RS_TYPE="sv" ;;
		(-g|--debug) set -x ;;
		(-h|--help) help_message 0 ;;
		(*) shift;  break   ;;
	esac
	shift
done
ARGS=

:	${SV_LIBDIR:=${0%/sh/*}}
:	${SVC_NAME:=${1##*/}}
:	${name=${SVC_NAME}}

case "${1}" in
	(*/rs.d/*)
:	${RS_TYPE:=rs}
	;;
	(*/sv/*)
:	${RS_TYPE:=sv}
	;;
esac
shift

source "${0%/*}"/runscript-functions ||
	{ echo "Required file not found." >&2; exit 1; }
:	${RS_RUNDIR:=${RS_SVCDIR}/stage-${RS_STAGE}}
source ${SV_SVCDIR}/.opt/SVC_OPTIONS

#
# Handle command
#
case "${RS_TYPE}" in
	(rs) rs_cmd "${@}";;
	(*) svc_cmd "${@}";;
esac

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
