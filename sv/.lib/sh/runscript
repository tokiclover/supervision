#!/bin/sh
#
# $Id:  @(#) runscript    0.6 2017/01/12 21:09:26                     Exp $
# $C$:  Copyright (c) 2015-2017 tokiclover <tokiclover@gmail.com>     Exp $
# $L$:  2-clause/new/simplified BSD License                           Exp $
#

#
# ZSH compatibility
#
if [ -n "${ZSH_VERSION}" ]; then
	emulate sh
	NULLCMD=:
	setopt NO_GLOB_SUBST SH_WORD_SPLIT
	disable -r end
else
	case "$(set -o 2>/dev/null)" in
		(*posix*) set -o posix;;
	esac
fi

help_message() {
	cat <<-EOH
 usage: runscript [OPTIONS] SERVICE COMMAND [ARGUMENTS]
   COMMAND: add|del|desc|remove|reload|restart|start|stop|status|zap|cgroup_remove_service
   OPTIONS: [OPTIONS] SERVICE COMMAND [ARGUMENTS]
     -D, --nodeps     Disable dependencies1
     -g, --debug      Enable debug mode
     -r, --rs         Select runscript backend
     -s, --sv         Select supervision backend
     -h, --help       Print help and exit
EOH
${1+exit ${1}}
}

while true; do
	case "${1}" in
		(-D|--node*) SVC_DEPS=0 ;;
		(-d|--deps)  SVC_DEPS=1 ;;
		(-r|--rs) SV_TYPE="rs" ;;
		(-s|--sv) SV_TYPE="sv" ;;
		(-g|--debug) set -x ;;
		(-h|--help) help_message 0 ;;
		(*) break ;;
	esac
	shift
done
if ! [ ${#} -ge 2 ]; then
	echo "ERROR: Insufficient number of arguments" >&2
	exit 1
fi

:	${SV_LIBDIR:=${0%/sh/*}}
:	${SVC_NAME:=${1##*/}}
:	${name=${SVC_NAME}}
:	${__cmd__=${2}}
:	${__cmd_args__=${@#*${2}}}
:	${__svc__=${1}}
case "${1}" in
	(/etc/sv/*)
:	${SV_SVCDIR:=${1%/*}}
	;;
esac
shift

if [ -z "${SV_TYPE}" ]; then
	[ -d "${1}" ] && SV_TYPE=sv || SV_TYPE=rs
fi

. ${SV_SVCDIR}/.opt/SVC_OPTIONS ||
	{ echo "ERROR: Required file not found." >&2; exit 1; }

#
# migrate to new sub-dirs
#
if [ ! -d ${SV_TMPDIR}/opts ]; then
	mkdir -p ${SV_TMPDIR}/opts
	mv -f ${SV_TMPDIR}/SV_OPTIONS ${SV_TMPDIR}/env
	for a in ${SV_TMPDIR}/*_OPTIONS; do
		b="${a##*/}"
		mv -f ${a} ${SV_TMPDIR}/opts/${b%_*}
	done
	a= b=
fi

#
# Handle command
#
case "${SV_TYPE}" in
	(rs)  rs_cmd "${@}";;
	(sv) svc_cmd "${@}";;
esac

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
