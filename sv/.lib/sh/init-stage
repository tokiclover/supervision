#!/bin/sh
#
# $Header:  /lib/sv/sh/init-stage                        Exp $
# $Author: (c) 2015-6 tokiclover <tokiclover@gmail.com>  Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.2 2016/01/01                               Exp $
#

:	${name=${0##*/}}
source "${0%/*}"/sv-backend ||
{ echo "Required file not found." >&2; exit 1; }
svc_backend -i -C

svc_init()
{
	local dir opt procfs
	[ -w /etc/mtab ] || opt=-n

	procfs=proc
	case "$(uname -s)" in
		(GNU/kFreeBSD) procfs=linprocfs;;
	esac

	if ! mount_info /proc; then
		begin "Mounting /proc"
		mount ${opt} -t ${procfs} -o ${SYSFS_OPTS:-nodev} proc /proc
		end ${?}
	fi

	if [ ! -d /run ]; then
		begin "Creating /run"
		mkdir -m 0755 -p /run
		end ${?}
	fi
	if ! mount_info /run; then
		begin "Mounting /run"
		mount ${opt} -t tmpfs -o nodev,mode=755,size=${RUN_FS_SIZE:-1%} run /run
		end ${?}
	fi
	for dir in /var/*; do
		[ -L "${dir}" ] || continue
		dir="$(readlink ${dir})"
		case "${dir}" in
			(/run*)
			begin "Creating ${dir}"
			mkdir -m 0755 -p "${dir}"
			end ${?}
			;;
		esac
	done
}

svc_rsh()
{
:	${RS_SHELL:=${SHELL:-sh}}
	case "${RS_SHELL}" in
		(*sulogin) exec ${RS_SHELL} -p /dev/tty8;;
		(*sh) exec 2>&1; exec ${RS_SHELL} -aim  ;;
	esac
}

begin "Starting Init-Stage${1}"
case "${1}" in
	(-1)
	svc_init
	svc_level -0
	rs -0 --rs stage
	svc_level -1
	rs -1 --rs stage
	;;
	(-2)
	svc_backend
	info "Starting Service Scan"
	echo $$ >${SV_TMPDIR}/${SV_CMD}.pid
	svc_level -2
	#
	# Bring up what left and stage-2
	#
	sh -c "rs -1 stage; rs -2 stage" &
	exec ${SV_CMD} ${SV_RUNDIR} "${SV_OPTS}"
	end ${?}
	#
	# Drop into a rescue shell
	#
	svc_rsh
	;;
	(-3)
	svc_shutdown
	svc_level -3
	;;
esac
end ${?}

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
