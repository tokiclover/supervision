#!/bin/sh
#
# $Header:  /lib/sv/sh/dep                               Exp $
# $Author: (c) 2015-6 tokiclover <tokiclover@gmail.com>  Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 1.2 2016/12/12 21:09:26                      Exp $
#

#
# ZSH compatibility
#
if [ -n "${ZSH_VERSION}" ]; then
	emulate sh
	NULLCMD=:
	setopt NO_GLOB_SUBST NULLGLOB SH_WORD_SPLIT
	disable -r end
elif [ -n "${BASH_VERSION}" ]; then
	shopt -qs nullglob
else
	case "$(set -o 2>/dev/NULL)" in
		(*posix*) set -o posix;;
	esac
fi

SV_CGROUP=0
export LC_ALL=C LANG=C
:	${name=${0##*/}}
:	${SV_LIBDIR:=${0%/sh/*}}
. "${0%/*}"/runscript-functions ||
	{ echo "Required file not found." >&2; exit 1; }
SV_DEPDIR="${SV_TMPDIR}/deps"

add_dep()
{
	local svc="${1}" dep="${2%:*}" DEP="${2#*:}"
	shift 2
	echo "${svc}:${dep}=\"${@}\"" >>${svcdeps}
}
dep_gen()
{
	local RC_OPTS SVC_DEBUG SVC_NAME SVC_NEED SVC_USE SVC_BEFORE SVC_AFTER name
	local dep SVC_PROVIDE

	if   [ -d "${SV_SVCDIR}/${1}" ]; then
		SVC_DIR="${SV_SVCDIR}/${1}" SV_TYPE=sv
	elif [ -f "${SV_SVCDIR}/${1}" ]; then
		SVC_DIR="${SV_SVCDIR}"      SV_TYPE=rs
	else
		return
	fi
	SVC_NAME="${1}"
	shift
	. ${SV_SVCDIR}/.opt/SVC_OPTIONS

	for dep in ${__SV_DEPS_ORDER__} ${DEPS}; do
		eval add_dep "${SVC_NAME}" "${dep}" \${SVC_${dep#*:}}
	done
}

dep_scan()
{
	local dir svc

	DEPS=provide:PROVIDE
	for dir in ${@:-${SV_SVCDIR}}; do
		cd ${dir}
		for svc in *; do
			dep_gen "${svc}"
		done
	done
}

svcdeps=${SV_DEPDIR}/svcdeps
if [ "${#}" = 0 ]; then
	printf '' >${svcdeps}
	dep_scan
else
	for svc; do
		[ -n "${SVCDEPS_UPDATE}" ] && sed "/^${svc}:/d" -i ${svcdeps}
		if dep_gen "${svc}"; then
			isin "${svc}" "${SVCLIST}" || SVCLIST="${SVCLIST} ${svc}"
		fi
	done
fi

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
