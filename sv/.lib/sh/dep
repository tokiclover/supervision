#!/bin/sh
#
# $Header:  /lib/sv/sh/dep                               Exp $
# $Author: (c) 2015-6 tokiclover <tokiclover@gmail.com>  Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.2 2016/05/05 21:09:26                      Exp $
#

:	${name=${0##*/}}
:	${SV_LIBDIR:=${0%/sh/*}}
source "${0%/*}"/runscript-functions ||
	{ echo "Required file not found." >&2; exit 1; }

umask 022
mkdir -p ${SV_TMPDIR}/deps
ARGS="$(getopt -o 0123Sd:rv -l dir:,rs,sv -n dep -s sh -- "${@}")"
eval set -- ${ARGS}

while true; do
case "${1}" in
	(-r|--rs) RS_TYPE=rs;;
	(-v|--sv) RS_TYPE=sv;;
	(-[0123]) RS_STAGE=${1#*-};;
	(-d|--dir) DIR="${2}" ;;
	(*) break;;
esac
shift
done

:	${RS_STAGE:=2}
SV_DEPDIR=${SV_TMPDIR}/deps/stage-${RS_STAGE}
SV_CGROUP=0
mkdir -p ${SV_DEPDIR}
:	${RS_RUNDIR:=${RS_SVCDIR}/stage-${RS_STAGE}}
:	${RS_TYPE:=sv}

dep_gen()
{
	local RC_OPTS SVC_DEBUG SVC_NAME SVC_NEED SVC_USE SVC_BEFORE SVC_AFTER name
	case "${RS_TYPE}" in
		(sv) SVC_DIR=${SV_SVCDIR}/${1};;
	esac
	DEP_0="${DEP_0} ${1}"
	SVC_NAME="${1}"
	source ${SV_SVCDIR}/.opt/SVC_OPTIONS

	for dep in ${__SV_SRT_DEP_ORD__}; do
		eval [ -n \"\${SVC_${dep#*:}}\" ] || continue
		eval echo ${SVC_NAME}:\${SVC_${dep#*:}} >>${SV_DEPDIR}/${RS_TYPE}_${dep%:*}
	done
}
dep_tree()
{
	local s
	while read line; do
		DEP_1="${DEP_1} ${line%:*}" DEP_2="${DEP_2} ${line#*:}"
		DEP_0="${DEP_0/${line%:*}}"
	done <${1}
	for i in 1 2; do
	eval DEP_${i}=\"$(echo \${DEP_${i}} | sed 's/[[:space:]]/\n/g' | sort -u)\"
	done
	for i in 0 1; do
	for s in $(eval echo \${DEP_${i}}); do
		for svc in $(eval echo \${DEP_$((${i}+1))}); do
			case "${s}" in
				("${svc}") eval DEP_${i}=\"\${DEP_${i}/${s}}\";;
			esac
		done
	done
	done
}

rm -f ${SV_DEPDIR}/${RS_TYPE}_*
[ -n "${DIR}" -a -d "${DIR}" ] ||
case "${RS_TYPE}" in
	(rs) DIR=${RS_RUNDIR} ;;
	(sv) DIR=${SV_SERVICE};;
esac
cd ${DIR}
for svc in *; do
	[ "${svc}" = "*" ] && continue
	dep_gen ${svc##*/}
done
dep_0="${DEP_0}"
for dep in use need before after; do
	DEP=${SV_DEPDIR}/${RS_TYPE}_${dep} DEP_0="${dep_0}" DEP_1= DEP_2=
	[ -f ${DEP} ] && dep_tree ${DEP}
	case ${dep} in
		(before) dep_1="${DEP_2}"
		DEP_2="${DEP_1}"; DEP_1="${dep_1}"
		;;
	esac
	for i in 0 1 2; do
		eval echo ${dep}_${i}=\\\"$(eval echo \${DEP_${i}} | sed 's/[[:space:]]/\n/g' | sort -u)\\\"
	done
done >${SV_DEPDIR}/${RS_TYPE}

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
