#!/bin/sh
#
# $Header:  /lib/sv/sh/dep                               Exp $
# $Author: (c) 2015 -tclover <tokiclover@gmail.com>      Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.2 2015/04/28 21:09:26                      Exp $
#

:	${name=${0##*/}}

source "${0%/*}"/sv-backend || { echo "Required file not found." >&2; exit 1; }
svc_backend -i -C

mkdir -p ${SV_TMPDIR}/deps
STG= SRV= SV_INIT=1

while true; do
case "${1}" in
	(-r|--rs)  SRV=rs;;
	(-v|--sv)  SRV=sv;;
	(*-[0123]) STG=${1#*-};;
	(*) break;;
esac
shift
done

RS_STAGE=stage-${STG:-2}
SV_DEPDIR=${SV_TMPDIR}/deps/${RS_STAGE}
SV_CGROUP=0
mkdir -p ${SV_DEPDIR}
:	${RS_RUNDIR:=${RS_SVCDIR}/${RS_STAGE}}
:	${SRV:=sv}

dep_gen()
{
	local RC_OPTS SVC_DEBUG SVC_NAME SVC_NEED SVC_USE SVC_BEFORE SVC_AFTER name
	case "${SRV}" in
		(sv) SVC_DIR=${SV_SVCDIR}/${1};;
	esac
	DEP_0="${DEP_0} ${1}"
	SVC_NAME=${1} source ${SV_SVCDIR}/.opt/SVC_OPTIONS

	for dep in ${SV_SRT_DEP_ORD}; do
		eval [ -n \"\${SVC_${dep#*:}}\" ] || continue
		eval echo ${SVC_NAME}:\${SVC_${dep#*:}} >>${SV_DEPDIR}/${SRV}_${dep%:*}
	done
}
dep_tree()
{
	local s
	while read line; do
		DEP_1="${DEP_1} ${line%:*}" DEP_2="${DEP_2} ${line#*:}"
		DEP_0="${DEP_0/${line%:*}}"
	done <${1}
	for i in 1 2; do
	eval DEP_${i}=\"$(echo \${DEP_${i}} | sed 's/[[:space:]]/\n/g' | sort -u)\"
	done
	for i in 0 1; do
	for s in $(eval echo \${DEP_${i}}); do
		for svc in $(eval echo \${DEP_$((${i}+1))}); do
			case "${s}" in
				("${svc}") eval DEP_${i}=\"\${DEP_${i}/${s}}\";;
			esac
		done
	done
	done
}

rm -f ${SV_DEPDIR}/${SRV}_*
case "${SRV}" in
	(rs) DIR=${RS_RUNDIR} ;;
	(sv) DIR=${SV_SERVICE};;
esac
for svc in ${DIR}/*; do
	dep_gen ${svc##*/}
done
dep_0="${DEP_0}"
for dep in use need before after; do
	DEP=${SV_DEPDIR}/${SRV}_${dep} DEP_0="${dep_0}" DEP_1= DEP_2=
	[ -f ${DEP} ] && dep_tree ${DEP}
	case ${dep} in
		(before) dep_1="${DEP_2}"
		DEP_2="${DEP_1}"; DEP_1="${dep_1}"
		;;
	esac
	for i in 0 1 2; do
		eval echo ${dep}_${i}=\\\"$(eval echo \${DEP_${i}} | sed 's/[[:space:]]/\n/g' | sort -u)\\\"
	done >${DEP}
done

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
