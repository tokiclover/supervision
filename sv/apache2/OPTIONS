#
# $Header: /etc/sv/apache2/OPTIONS                         Exp $
# $License: 2-clause/new/simplified BSD                    Exp $
#

# When you install a module it is easy to activate or deactivate the modules
# and other features of apache using the APACHE2_OPTS line. Every module should
# install a configuration in /etc/apache2/modules.d. In that file will have an
# <IfDefine NNN> directive where NNN is the option to enable that module.
#
# Here are the options available in the default configuration:
#
#  AUTH_DIGEST  Enables mod_auth_digest
#  AUTHNZ_LDAP  Enables authentication through mod_ldap (available if USE=ldap)
#  CACHE        Enables mod_cache
#  DAV          Enables mod_dav
#  ERRORDOCS    Enables default error documents for many languages.
#  INFO         Enables mod_info, a useful module for debugging
#  LANGUAGE     Enables content-negotiation based on language and charset.
#  LDAP         Enables mod_ldap (available if USE=ldap)
#  MANUAL       Enables /manual/ to be the apache manual (available if USE=docs)
#  MEM_CACHE    Enables default configuration mod_mem_cache
#  PROXY        Enables mod_proxy
#  SSL          Enables SSL (available if USE=ssl)
#  STATUS       Enabled mod_status, a useful module for statistics
#  SUEXEC       Enables running CGI scripts (in USERDIR) through suexec.
#  USERDIR      Enables /~username mapping to /home/username/public_html
#
#
# The following two options provide the default virtual host for the HTTP and
# HTTPS protocol. YOU NEED TO ENABLE AT LEAST ONE OF THEM, otherwise apache
# will not listen for incomming connections on the approriate port.
#
#  DEFAULT_VHOST      Enables name-based virtual hosts, with the default
#                     virtual host being in /var/www/localhost/htdocs
#  SSL_DEFAULT_VHOST  Enables default vhost for SSL (you should enable this
#                     when you enable SSL)
#
SVC_OPTS="-D DEFAULT_VHOST -D INFO -D SSL -D SSL_DEFAULT_VHOST -D LANGUAGE"

# Extended options for advanced uses of Apache ONLY
# You don't need to edit these unless you are doing crazy Apache stuff
# As not having them set correctly, or feeding in an incorrect configuration
# via them will result in Apache failing to start
# YOU HAVE BEEN WARNED.

# PID file
PIDFILE=/var/run/apache2.pid

# timeout for startup/shutdown checks
#TIMEOUT=10

# ServerRoot setting
#SERVERROOT=/usr/lib64/apache2

# Configuration file location
# - If this does NOT start with a '/', then it is treated relative to
# $SERVERROOT by Apache
SVC_CONFIGFILE=/etc/apache2/httpd.conf

# Location to log startup errors to
# They are normally dumped to your terminal.
#STARTUPERRORLOG="/var/log/apache2/startuperror.log"

# A command that outputs a formatted text version of the HTML at the URL
# of the command line. Designed for lynx, however other programs may work.
#LYNX="lynx -dump"

# The URL to your server's mod_status status page.
# Required for status and fullstatus
#STATUSURL="http://localhost/server-status"

# Method to use when reloading the server
# Valid options are 'restart' and 'graceful'
# See http://httpd.apache.org/docs/2.2/stopping.html for information on
# what they do and how they differ.
RELOAD_TYPE="graceful"

SVC_STARTED_COMMANDS="configdump fullstatus graceful gracefulstop reload"
SVC_COMMANDS="configtest modules virtualhosts $SVC_STARTED_COMMANDS"

description_configdump="Dumps the configuration of the runing apache server. Requires server-info to be enabled and www-client/lynx."
description_configtest="Run syntax tests for configuration files."
description_fullstatus="Gives the full status of the server. Requires lynx and server-status to be enabled."
description_graceful="A graceful restart advises the children to exit after the current request and reloads the configuration."
description_gracefulstop="A graceful stop advises the children to exit after the current request and stops the server."
description_modules="Dump a list of loaded Static and Shared Modules."
description_reload="Kills all children and reloads the configuration."
description_virtualhosts="Show the settings as parsed from the config file (currently only shows the virtualhost settings)."
description_stop="Kills all children and stops the server."

# Apply default values for some conf.d variables.
PIDFILE="${PIDFILE:-/var/run/apache2.pid}"
TIMEOUT=${TIMEOUT:-15}
SERVERROOT="${SERVERROOT:-/usr/lib64/apache2}"
SVC_CONFIGFILE="${SVC_CONFIGFILE:-/etc/apache2/httpd.conf}"
LYNX="${LYNX:-lynx -dump}"
STATUSURL="${STATUSURL:-http://localhost/server-status}"
RELOAD_TYPE="${RELOAD_TYPE:-graceful}"

SVC_OPTS="${SVC_OPTS} -d ${SERVERROOT}"
SVC_OPTS="${SVC_OPTS} -f ${SVC_CONFIGFILE}"
SVC_CMD="/usr/sbin/apache2"
SVC_NEED=net
SVC_USE="mysql dns logger networkfs postgresql"
SVC_AFTER=sshd
SVC_PROVIDE=httpd

configtest()
{
	checkconfig
}

checkconfd()
{
	if [ ! -d "${SERVERROOT}" ]; then
		error "SERVERROOT does not exist: ${SERVERROOT}"
		return 1
	fi
}

checkconfig()
{
	checkpath --dir /run/apache_ssl_mutex
	checkconfd || return 1

	OUTPUT=$( ${SVC_CMD} ${SVC_OPTS} -t 2>&1 )
	if [ "$?" != 0 ]; then
		error "has detected an error in your setup:"
		printf "${OUTPUT}\n"
		return 1
	else
		return 0
	fi
}

start_pre()
{
	checkconfig || return 1

	if [ -n "${STARTUPERRORLOG}" ] ; then
		# We must make sure that we only append to SVC_OPTS
		# in start() and not in stop() or anywhere else that may
		# be executed along with start(), see bug #566726.
		SVC_OPTS="${SVC_OPTS} -E ${STARTUPERRORLOG}"
	fi
	SVC_OPTS="${SVC_OPTS} -D NO_DETACH -D FOREGROUND -k start"
}
start_post()
{
	svc_wait "${TIMEOUT}" "${PIDFILE}"
}

stop_pre()
{
	if [ "${__cmd__}" = "restart" ]; then
		checkconfig || return 1
	fi

	PID=$(cat ${PIDFILE} 2>${NULL})
	[ -n "${PID}" ] && ${SVC_CMD} ${SVC_OPTS} -k stop
}
stop_post()
{
	[ -f ${PIDFILE} ] && pgrep -P ${PID} apache2 >${NULL} &&
	svc_wait "${TIMEOUT}" "${PIDFILE}"
}

reload()
{
	checkconfig || return 1

	if [ "${RELOAD_TYPE}" = "restart" ]; then
		begin "Restarting ${SVC_NAME}"
		${SVC_CMD} ${SVC_OPTS} -k restart
		end $?
	elif [ "${RELOAD_TYPE}" = "graceful" ]; then
		begin "Gracefully restarting ${SVC_NAME}"
		${SVC_CMD} ${SVC_OPTS} -k graceful
		end $?
	else
		error "invallid ${RELOAD_TYPE}: Please edit /etc/sv/${SVC_NAME}/OPTIONS"
	fi
}

graceful()
{
	checkconfig || return 1
	${SVC_CMD} ${SVC_OPTS} -k graceful
}

gracefulstop()
{
	checkconfig || return 1
	begin "Gracefully stopping ${SVC_NAME}"
	${SVC_CMD} ${SVC_OPTS} -k graceful-stop
	end $?
}

modules()
{
	checkconfig || return 1
	${SVC_CMD} ${SVC_OPTS} -M 2>&1
}

fullstatus()
{
	if ! type -p $(set -- ${LYNX}; echo $1) 2>&1 >${NULL}; then
		error "lynx not found! you need to emerge www-client/lynx"
	else
		${LYNX} ${STATUSURL}
	fi
}

virtualhosts()
{
	checkconfig || return 1
	${SVC_CMD} ${SVC_OPTS} -S
}

configdump()
{
	:	${INFOURL:=http://localhost/server-info}

	checkconfd || return 1

	if ! type -p $(set -- ${LYNX}; echo $1) 2>&1 >/dev/null; then
		error "lynx not found! you need to emerge www-client/lynx"
	else
		echo "${SVC_CMD} started with '${SVC_OPTS}'"
		for i in config server list; do
			${LYNX} "${INFOURL}/?${i}" | sed '/Apache Server Information/d;/^[[:space:]]\+[_]\+$/Q'
		done
	fi
}

#
# vim:fenc=utf-8:ft=sv:ci:pi:sts=0:sw=4:ts=4:
#
