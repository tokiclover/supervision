.\"
.\" CopyLeft (c) 2016 tokiclover <tokiclover@gmail.com>
.\"
.\" Distributed under the terms of the 2-clause BSD License as
.\" stated in the COPYING file that comes with the source files
.\"
.pc
.TH RS 8 "2016-07-30" "0.12.0" "SERVICE MANAGEMENT UTILITY"
.SH NAME
rs \- utility to manage services and init-stage
.SH DESCRIPTION
.B rs
is a utility to manage services and init-stages (bundle of services) or runlevel
for SysVinit terminology.
This utility is used in conjunction with a supervsion suite like
.B runit
,
.B s6
or
.B daemontools(-encore)
to get a fully supervised init-system and service-manager. Otherwise, only
runscript would work out of the box if not. A supported supervision suite
can be configured to work with this utility by running
`\fI@LIBDIR@/sv/bin/sv-config -s \fBSUPERVISION_SUITE\fR'.
And then, the recommended way to use this package is by using the included
`\fI@LIBDIR@/sv/sh/init-stage\fR' handler from `\fI@SYSCONFDIR@/runit/{1,2,3}\fR' for
example. Although, using
.B rs
directly will still work when not using the init-system part of the package.
.SH SYNOPSIS
.B rs
.RB [\| OPTIONS \| ]
.RB \| SERVICE \|
.RB \| COMMAND \|
.RB \| [ARGUMENTS] \|

.br
.B SERVICE
name can be replaced by the special use case
.B stage
to manage a whole bundle of services instead of a single service; for example,
`rs -2 stage' to bring the system to stage-2 (in supervision sense.)
Unless knowing what to do with init-stage, it's better to use the included
.B init-stage
for this and then manage individual service at hand. Still, that command can
be used to finish a failed init-stage of course. This case dicts the use of
.B rs
directly rather than the \fBinit-stage\fR. Although, the
.B init-stage
would try to handle this by killing the previous supervisor before launching
a new one.

.br
.B rs
.RB [\| \-D|\-\-nodeps \|]
.RB [\| \-g|\-\-debug \]
.RB [\| \-0|\-\-sysinit \]
.RB [\| \-1|\-\-boot \|]
.RB [\| \-2|\-\-default \|]
.RB [\| \-3|\-\-shutdown \|]\|]
.RB [\| \-q|\-\-quiet \|]
.RB  \| SERVICE \|
.RB \| COMMAND \|
.RB \| [ARGUMENTS] \|

This variant is used to manage particular services when need be. Do note that,
it's rather prefered and recommended to use
.B rs
command to manage services rather than using the service executable. And this
is more true for supervision services when dealing with dependencies and
virtual services. Starting a supervision service shall be done with
.B rs
binary isntead of using `\fI@SYSCONFDIR@/sv/\fBSERVICE\fI/run \fBCOMMAND ARGUMENTS\fR'.

.br
.B rs
.RB [\| \-h|\-\-help \|]
.RB [\| \-V|\-\-version \|]

.SH OPTIONS
.TP
.B \-D|\-\-nodeps
Disable dependency tracking when starting/stopping services
.TP
.B \-g|\-\-debug
Enable debugging mode
.TP
.B \-(0|1|2|3)
Select a particular stage or runlevel
.TP
.B \-h|\-\-help
Print the help message
.TP
.B \-q|\-\-quiet
Print the help message
.SH "RETURN CODES"
.TP
.B 0
success (service already started/stopped)
.TP
.B 1
miscellaneous operational failures (to read the dependency file, generate the
dependency file...)
.TP
.B 2
failure to find the requested service
.TP
.B 3
for
.I status
service command when a service is stopped
.TP
.B 4
failure to lock a service lockfile for start/stop; or timed out when trying to
lock the lockfile.
.TP
.B errno
system call failure (fork...)
.TP
.B 255
execve system call failure
.SH "SEE ALSO"
.BR supervision (5)
.SH AUTHORS
tokiclover <tokiclover@supervision.project>
.\"
.\" vim:fenc=utf-8:ft=groff:ci:pi:sts=2:sw=2:ts=2:expandtab:
.\"
