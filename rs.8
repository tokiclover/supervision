.\"
.\" CopyLeft (c) 2016 tokiclover <tokiclover@gmail.com>
.\"
.\" Distributed under the terms of the 2-clause BSD License as
.\" stated in the COPYING file that comes with the source files
.\"
.pc
.TH RS 8 "2016-12-08" "0.12.5" "SERVICE MANAGEMENT UTILITY"
.SH NAME
rs \- utility to manage services and init-stage
.SH DESCRIPTION
.B rs
is a utility to manage services and init-stages (bundle of services) or runlevel
for SysVinit terminology.
This utility is used in conjunction with a supervsion suite like
.B runit
,
.B s6
or
.B daemontools(-encore)
to get a fully supervised init-system and service-manager. Otherwise, only
runscript would work out of the box if not. A supported supervision suite
can be configured to work with this utility by running
`\fI@LIBDIR@/sv/sbin/sv-config -s \fBSUPERVISION_BACKEND\fR'.
And then, the recommended way to use this package is to use the included
`\fI@LIBDIR@/sv/sh/init-stage\fR' handler from `\fI@SYSCONFDIR@/runit/{1,2,3}\fR' for
example. Although, using
.B rs
directly will still work when not using the init-system part of the package.
.SH SYNOPSIS
.B rs
.RB [\| OPTIONS \| ]
.RB \| SERVICE \|
.RB \| COMMAND \|
.RB \| [ARGUMENTS] \|

.B rs
.RB [\| \-h|\-\-help \|]
.RB [\| \-v|\-\-version \|]

.B SERVICE
name can be replaced by
.B scan
to update the dependency cache of the list of services passed as arguments
like \fBrs scan \fIspawn-fcgi.{lighttpd,nginx}\fR.

.B SERVICE
name can be replaced by the special use case
.B stage
to manage a whole bundle of services instead of a single service; for example,
`rs -2 stage' to bring the system to stage-2 (in supervision sense.)
Unless knowing what to do with init-stage, it's better to use the included
.B init-stage
for this and then manage individual service at hand. Still, that command can
be used to finish a failed init-stage of course. This case dicts the use of
.B rs
directly rather than the \fBinit-stage\fR. Although, the
.B init-stage
would try to handle this by killing the previous supervisor before launching
a new one.

.B NOTE:
If
.B {rc,service}
is not installed in the default path, either add
.B $SV_LIBDIR/bin:$SV_LIBDIR/sbin
to
.B PATH
environment variable; or else, copy the symlink to
.I /sbin
for example to get the same behaviour; or else use
.B rs
instead because
.B service
or
.B rc
are a just limited interfaces to manage service or runlevel.

.SS SYSTEM-V COMPATIBILITY RC
.B rc
.RB \| sysinit|boot|default|shutdown|reboot|single|nonetwork \|

This SystemV compatible form using runlevel alias for stage-{0,1,2,3}.
.B single
runlevel is used for system repair; while
.B nonetwork
is used to mark
.I net
service providers as started to avoid starting network services.
Those runlevels can be required at bootup by appending a runlevel name to
.B softlevel
kernel command line argument like
.I softlevel=single
to request a runlevel.
And extra
.B noinit
kernel cmdline argument is also available to mark that comma separated list as
started to avoid starting them in
.I any
runlevels but \fIsysinit\fR, like
.I noinit=atd,cron
to avoid starting
.I cron
and
.I atd
services.

.B WARNING:
Services marked as started can be safely started after issuing
.B zap
service command. And some services will inevitably fail like networkfs.
Second,
.B {reboot|shutdown}
runlevels shall not be used when using
.I runit
or \fIs6\fR;
use \fI@LIBDIR@/sbin/sv-shutdown --{reboot|shutdown}\fR instead to properly
.B reboot
or
.B shutdown
a system by sending the proper signal to
.B PID
1 (\fBinit\fR) instead. Any other
.B init
that does not trigger a stage-3/(reboot|shutdown) (by using
\fI@LIBDIR@/sv/sh/init-stage\fR)
can be used and then issue a \fIrc {reboot|shutdown}\fR to get almost the same
effect. However, using
.I sv-shutdown
has the same effect... so using it instead of
.B rc
binary is more safe when using a supported supervision backend.

.SS SYSTEM-V COMPATIBILITY SERVICE
.B service
.RB [\| \-D|\-\-nodeps \|]
.RB [\| \-g|\-\-debug \]
.RB [\| \-0|\-\-sysinit \]
.RB [\| \-1|\-\-boot \|]
.RB [\| \-2|\-\-default \|]
.RB [\| \-3|\-\-shutdown \|]
.RB [\| \-q|\-\-quiet \|]
.RB  \| SERVICE \|
.RB \| COMMAND \|
.RB \| [ARGUMENTS] \|

This variant is used to manage particular services when need be. Do note that,
it's rather prefered and recommended to use
.B service
command to manage services rather than using the service executable. And this
is more true for supervision services when dealing with dependencies and
virtual services. Starting a supervision service shall be done with
.B service
binary instead of using `\fI@SYSCONFDIR@/sv/\fBSERVICE\fI/run \fBCOMMAND ARGUMENTS\fR'.

.SH OPTIONS
.TP
.B {sysinit|boot|default|shutdown|reboot|single|nonetwork}
sysvinit compatible runlevels used to start an init-stage-{0,1,2,3}
.TP
.B \-D|\-\-nodeps
Disable dependency tracking when starting/stopping services
.TP
.B \-g|\-\-debug
Enable debugging mode for services (shell tracing)
.TP
.B \-{0|1|2|3}
Select a particular stage or runlevel
.TP
.B \-h|\-\-help
Print the help message
.TP
.B \-q|\-\-quiet
Suppress verbose message
.SH "SERVICE COMMANDS"
Standard LSB along with extra service commands are supported.
.TP
.B start
start a service if down or stopped (supervision service wait up to 10 seconds
by default to start a service.)
.TP
.B stop
stop a service if up or started (supervision service wait up to 10 seconds by
default to stop a service.)
.TP
.B restart
restart a service after stopping it if started (runscript service can define
a particular shell function for this purpose.)
.TP
.B remove
remove a supervised service from the running directory.
This command has no effect for runscript services.
.TP
.B status
report the status of service (if started or stopped.)
.TP
.B zap
remove the temporary files of a service to be able to start a fresh environment,
or restart a service if already started.
.TP
.B add
add a service to an init-stage or runlevel (stage level argument is required.)
.TP
.B del
remove a service from an init-stage or runlevel (stage level argument is required.)
.TP
.B cgroup_remove_service
remove the
.B Control Group PIDs
hierarchy after stopping a service. This command has no effect for runscript
services if not used with a daemon.
.B CGROUP_CLEANUP
environmenet variable can be enabled for automatic clean up.
.TP
.B new
add a new supervised service from a template. This command should be run with
`\fI@LIBDIR@/sv/bin/sv-config [--log] \fBSERVICE \fInew\fR'.
.TP
.B SVC_COMMANDS
extra comands defined as shell functions and added to
.B SVC_COMMANDS
environment variable. Any defined command can be used as a standard LSB command.
.TP
.B desc
print service description to standard output.
A command
.B name
argument can be passed to print the description of the command instead of the
description of the service, `rs udev desc reload' for example.
.B scan
update the dependency cache of a service. \fIrs scan\fB SERVICES\fR can be used
for a list of service instead.
.SH CONFIGURATION
See
.I @SYSCONFDIR@/sv.conf
for the global configuration file, or
.I @SYSCONFDIR@/sv.conf.d/\fBSERVICE\fR
for runscript particular services or
.I @SYSCONFDIR@/sv/\fBSERVICE\fI/OPTIONS\fB[.INSTANCE]\fR
for supervision services for the local configuration file,
and \fBsupervsion\fR(5) for settings related to
.B rs
service management.
.SH "RETURN CODES"
.TP
.B 0
success (service already started/stopped)
.TP
.B 1
miscellaneous operational failures (to read the dependency file, generate the
dependency file...)
.TP
.B 2
failure to find the requested service
.TP
.B 3
for
.I status
service command when a service is stopped
.TP
.B 4
failure to lock a service lockfile for start/stop; or timed out when trying to
lock the lockfile.
.TP
.B errno
system call failure (fork...)
.TP
.B 255
execve system call failure
.SH "APPLICATION USAGE"
Some services are added to the service directory? Try starting them then.
It seems to work? Good, try to add them in a init-stage or runlevel with
`\fIrs -\fBLEVEL SERVICE \fIadd\fR'; and then regenerate the priority file
by running `\fIrs -\fBLEVEL \fIstage\fR' and then checkout
\fISV_TMPDIR/deps/\fBLEVEL\fI_deptree\fR to see if the service is inserted
in the right place depending on the dependency definitions. Or better,
check out the file beforehand. It looks weird or the order changed dramatically?
Try removing the file altogether and try again. Else, it can be a case of cyclic
dependency definition. Major dependency redefinition is necessary.

.B NOTE:
Cyclical dependency definitions will cause dependency setup to fail when using
`\fIservice \fBSERVICE \fIstart\fR'
or service scheduling havoc in dependency tree files mentionned above.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.BR supervision (5)
.SH AUTHORS
tokiclover <tokiclover@supervision.project>
.\"
.\" vim:fenc=utf-8:ft=groff:ci:pi:sts=2:sw=2:ts=2:expandtab:
.\"
